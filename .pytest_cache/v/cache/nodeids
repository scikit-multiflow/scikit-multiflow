[
  "tests/bayes/test_naive_bayes.py::test_naive_bayes",
  "tests/core/test_instance_header.py::test_instance_heaer",
  "tests/data/test_agrawal_generator.py::test_agrawal_generator",
  "tests/data/test_concept_drift_stream.py::test_concept_drift_stream",
  "tests/data/test_data_stream.py::test_data_stream",
  "tests/data/test_data_stream.py::test_data_stream_X_y",
  "tests/data/test_file_stream.py::test_file_stream",
  "tests/data/test_hyper_plane_generator.py::test_hyper_plane_generator",
  "tests/data/test_led_generator.py::test_led_generator",
  "tests/data/test_led_generator_drift.py::test_led_generator_drift",
  "tests/data/test_mixed_generator.py::test_mixed_generator",
  "tests/data/test_multilabel_generator.py::test_multilabel_generator",
  "tests/data/test_random_rbf_generator.py::test_random_rbf_generator",
  "tests/data/test_random_rbf_generator_drift.py::test_random_rbf_generator_drift",
  "tests/data/test_random_tree_generator.py::test_random_tree_generator",
  "tests/data/test_regression_generator.py::test_regression_generator",
  "tests/data/test_sea_generator.py::test_sea_generator",
  "tests/data/test_sine_generator.py::test_sine_generator",
  "tests/data/test_stagger_generator.py::test_stagger_generator",
  "tests/data/test_synth.py::test_make_logical",
  "tests/data/test_waveform_generator.py::test_waveform_generator",
  "tests/data/test_waveform_generator.py::test_waveform_generator_noise",
  "tests/drift_detection/test_adwin.py::test_adwin",
  "tests/drift_detection/test_ddm.py::test_ddm",
  "tests/drift_detection/test_eddm.py::test_eddm",
  "tests/drift_detection/test_page_hinkley.py::test_page_hinkley",
  "tests/evaluation/test_evaluate_holdout.py::test_evaluate_holdout_classifier",
  "tests/evaluation/test_evaluate_prequential.py::test_evaluate_prequential_classifier",
  "tests/evaluation/test_evaluate_stream_gen_speed.py::test_evaluate_stream_gen_speed",
  "tests/lazy/test_kdtree.py::test_kdd_tree_euclidean",
  "tests/lazy/test_kdtree.py::test_kdd_tree_mixed",
  "tests/lazy/test_knn.py::test_knn",
  "tests/lazy/test_knn_adwin.py::test_knn_adwin",
  "tests/lazy/test_sam_knn.py::test_sam_knn",
  "tests/meta/test_adaptive_random_forests.py::test_adaptive_random_forests",
  "tests/meta/test_batch_incremental.py::test_batch_incremental",
  "tests/meta/test_classifier_chains.py::test_classifier_chains",
  "tests/meta/test_leverage_bagging.py::test_leverage_bagging",
  "tests/meta/test_multi_output_learner.py::test_multi_output_learner",
  "tests/meta/test_oza_bagging.py::test_oza_bagging",
  "tests/meta/test_oza_bagging_adwin.py::test_oza_bagging_adwin",
  "tests/meta/test_regressor_chains.py::test_regressor_chains",
  "tests/metrics/test_measure_collection.py::test_classification_measurements",
  "tests/metrics/test_measure_collection.py::test_window_classification_measurements",
  "tests/metrics/test_measure_collection.py::test_multi_target_classification_measurements",
  "tests/metrics/test_measure_collection.py::test_window_multi_target_classification_measurements",
  "tests/metrics/test_measure_collection.py::test_regression_measurements",
  "tests/metrics/test_measure_collection.py::test_window_regression_measurements",
  "tests/metrics/test_measure_collection.py::test_multi_target_regression_measurements",
  "tests/metrics/test_measure_collection.py::test_window_multi_target_regression_measurements",
  "tests/neural_networks/test_perceptron.py::test_perceptron",
  "tests/transform/test_missing_values_cleaner.py::test_missing_values_cleaner",
  "tests/transform/test_missing_values_cleaner.py::test_missing_values_cleaner_coverage",
  "tests/transform/test_one_hot_to_categorical.py::test_one_hot_to_categorical",
  "tests/trees/test_hoeffding_adaptive_tree.py::test_hat_mc",
  "tests/trees/test_hoeffding_adaptive_tree.py::test_hat_nb",
  "tests/trees/test_hoeffding_adaptive_tree.py::test_hat_nba",
  "tests/trees/test_hoeffding_tree.py::test_hoeffding_tree",
  "tests/trees/test_hoeffding_tree.py::test_hoeffding_tree_coverage",
  "tests/trees/test_lc_hoeffding_tree.py::test_lc_hoeffding_tree",
  "tests/trees/test_multi_target_regression_hoeffding_tree.py::test_hoeffding_tree",
  "tests/trees/test_multi_target_regression_hoeffding_tree.py::test_hoeffding_tree_perceptron",
  "tests/trees/test_multi_target_regression_hoeffding_tree.py::test_hoeffding_tree_adaptive",
  "tests/trees/test_multi_target_regression_hoeffding_tree.py::test_hoeffding_tree_coverage",
  "tests/trees/test_regression_hoeffding_adaptive_tree.py::test_hoeffding_tree",
  "tests/trees/test_regression_hoeffding_adaptive_tree.py::test_hoeffding_tree_perceptron",
  "tests/trees/test_regression_hoeffding_tree.py::test_hoeffding_tree",
  "tests/trees/test_regression_hoeffding_tree.py::test_hoeffding_tree_perceptron",
  "tests/trees/test_regression_hoeffding_tree.py::test_hoeffding_tree_coverage",
  "tests/utils/test_file_scripts.py::test_clean_header",
  "tests/utils/test_file_scripts.py::test_remove_header",
  "tests/utils/test_utils.py::test_get_dimensions",
  "tests/utils/test_utils.py::test_get_max_value_key",
  "tests/utils/test_utils.py::test_normalize_values_in_dict",
  "tests/utils/test_validation.py::test_check_random_state",
  "tests/utils/test_validation.py::test_check_weights"
]